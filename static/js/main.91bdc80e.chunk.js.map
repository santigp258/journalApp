{"version":3,"sources":["firebase/firebaseConfig.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","reducers/authReducer.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/notes/NoteLoader.js","routers/PrivateRoutes.js","routers/PublicRoutes.js","routers/AppRouter.js","reducers/NotesReducer.js","reducers/uiReducer.js","store/store.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapChildren","push","id","data","types","activeNote","note","type","payload","startLoadingNotes","dispatch","setNotes","startSaveNotes","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","currentTime","Date","getTime","noteDate","moment","useDispatch","active","useSelector","state","inputUploadImage","useRef","className","format","style","display","onChange","e","files","text","willOpen","showLoading","fileUrl","close","startUploading","ref","onClick","current","click","NoteScreen","formValues","activeId","useEffect","placeholder","autoComplete","src","alt","showDenyButton","confirmButtonText","denyButtonText","then","result","isConfirmed","delete","NothingSelected","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","user","login","displayName","catch","err","message","logout","authReducer","action","JournalEntry","date","activeEntry","backgroundSize","backgroundImage","JournalEntries","entries","map","entry","Sidebar","signOut","newNote","add","docRef","JournalScreen","LoginScreen","history","useHistory","loading","ui","isFormValid","validator","isEmail","trim","length","onSubmit","preventDefault","replace","disabled","signInWithPopup","error","console","log","to","RegisterScreen","password2","formValue","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPassword","AuthRouter","path","component","NoteLoader","PrivateRoutes","Component","isAuthenticated","rest","props","PublicRoutes","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","exact","msgError","reducers","combineReducers","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","document","getElementById"],"mappings":"+QAcAA,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAKjB,IAAMC,EAAKT,IAASU,YAGdC,EAAqB,IAAIX,IAASY,KAAKC,mBCnBhCC,EAAU,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,4DACP,oDAEXC,EAAW,IAAIC,UAEZC,OAAO,gBAAiB,iBACjCF,EAASE,OAAO,OAAQJ,GANA,kBASHK,MARJ,mDAQoB,CACjCC,OAAQ,OACRC,KAAML,IAXc,YAShBM,EATgB,QAcbC,GAda,kCAeID,EAAKE,OAfT,eAedC,EAfc,yBAgBbA,EAAUC,YAhBG,yBAkBRJ,EAAKE,OAlBG,oJAAH,sDCEVG,EAAS,uCAAG,WAAOC,GAAP,iBAAAb,EAAA,sEACCP,EAAGqB,WAAH,UAAiBD,EAAjB,mBAAsCE,MADvC,cACjBC,EADiB,OAGjBC,EAAQ,GAGdD,EAAUE,SAAQ,SAACC,GACjBF,EAAMG,KAAN,aACEC,GAAIF,EAAaE,IACdF,EAAaG,YATG,kBAYhBL,GAZgB,2CAAH,sDCFTM,EACJ,eADIA,EAEH,gBAFGA,EAKC,iBALDA,EAMI,oBANJA,EASK,qBATLA,EAUM,sBAVNA,EAcE,0BAdFA,EAeA,qBAfAA,EAgBG,uBAhBHA,EAkBE,sBAlBFA,EAmBU,0BAnBVA,EAoBU,0BCKVC,EAAa,SAACH,EAAII,GAAL,MAAe,CACvCC,KAAMH,EACNI,QAAQ,aACNN,MACGI,KAIMG,EAAoB,SAACf,GAChC,8CAAO,WAAOgB,GAAP,eAAA7B,EAAA,sEACeY,EAAUC,GADzB,OACCI,EADD,OAELY,EAASC,EAASb,IAFb,2CAAP,uDAMWa,EAAW,SAACb,GAAD,MAAY,CAClCS,KAAMH,EACNI,QAASV,IAIEc,EAAiB,SAACN,GAC7B,8CAAO,WAAOI,EAAUG,GAAjB,iBAAAhC,EAAA,6DAEGa,EAAQmB,IAAWpC,KAAnBiB,IAEHY,EAAKQ,YACDR,EAAKQ,WAERC,EAPD,eAOwBT,IACNJ,GARlB,SAUC5B,EAAG0C,IAAH,WAAWtB,EAAX,0BAAgCY,EAAKJ,KAAMe,OAAOF,GAVnD,OAYLL,EAASQ,EAAYZ,EAAKJ,GAAIa,IAC9BI,IAAKC,KAAK,SAAUd,EAAKe,MAAO,WAb3B,2CAAP,yDAkBWH,EAAc,SAAChB,EAAII,GAAL,MAAe,CACxCC,KAAMH,EACNI,QAAS,CACPN,KACAI,KAAK,aACHJ,MACGI,MAqCIgB,EAAa,SAACpB,GAAD,MAAS,CACjCK,KAAMH,EACNI,QAASN,I,QC5GEqB,EAAU,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EAChBC,mBAASD,GADO,mBACrCE,EADqC,KAC7BC,EAD6B,KAGtCC,EAAQ,WAAkC,IAAjCC,EAAgC,uDAAjBL,EAC5BG,EAAUE,IAGNC,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3BJ,EAAU,2BACLD,GADI,kBAENK,EAAOC,KAAOD,EAAOE,UAI1B,MAAO,CAACP,EAAQI,EAAmBF,I,wBCXxBM,EAAc,WAEzB,IAAMC,GAAc,IAAIC,MAAOC,UACzBC,EAAWC,IAAOJ,GAElBzB,EAAW8B,cAETC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAM7C,SAAxC2C,OAOFG,EAAmBC,mBAWzB,OACE,sBAAKC,UAAU,gBAAf,UACE,+BAAOR,EAASS,OAAO,mBAEvB,uBACExC,KAAK,OACLyC,MAAO,CAAEC,QAAS,QAClBC,SAbmB,SAACC,GACxB,IAAMvE,EAAOuE,EAAEpB,OAAOqB,MAAM,GACxBxE,GACF8B,EFmDwB,SAAC9B,GAC7B,8CAAO,WAAO8B,EAAUG,GAAjB,iBAAAhC,EAAA,6DACWwB,EAAeQ,IAAWf,MAAlC2C,OAERtB,IAAKC,KAAK,CACRC,MAAO,eACPgC,KAAM,cACNC,SAAU,WACRnC,IAAKoC,iBAPJ,SAUiB5E,EAAWC,GAV5B,OAUC4E,EAVD,OAWLnD,EAAWS,IAAM0C,EACjB9C,EAASE,EAAeP,IAExBc,IAAKsC,QAdA,2CAAP,wDEpDaC,CAAe9E,KAWtB+E,IAAKf,IAEP,gCACE,wBAAQE,UAAU,MAAMc,QArBF,WAC1BhB,EAAiBiB,QAAQC,SAoBrB,qBAGA,wBAAQhB,UAAU,MAAMc,QA7BX,WACjBlD,EAASE,EAAe6B,KA4BpB,yBCpCKsB,EAAa,WAAO,IACfzD,EAASoC,aAAY,SAACC,GAAD,OAAWA,EAAM7C,SAA9C2C,OADsB,EAEiBlB,EAAQjB,GAFzB,mBAEvB0D,EAFuB,KAEXlC,EAFW,KAEQF,EAFR,KAIxBlB,EAAW8B,cAEXyB,EAAWpB,iBAAOvC,EAAKJ,IAC7BgE,qBAAU,YAEA,OAAJ5D,QAAI,IAAJA,OAAA,EAAAA,EAAMJ,MAAO+D,EAASJ,UACxBjC,EAAMtB,EAAMsB,GACZqC,EAASJ,QAAUvD,EAAKJ,MAEzB,CAACI,EAAMsB,IAEVsC,qBAAU,WAERxD,EAASL,EAAW2D,EAAW9D,GAAZ,eAAqB8D,OACvC,CAACA,EAAYtD,IAlBc,IAoBtBvB,EAAgB6E,EAAhB7E,KAAMkC,EAAU2C,EAAV3C,MAmBd,OACE,sBAAKyB,UAAU,sBAAf,UACE,cAAC,EAAD,IAEA,sBAAKA,UAAU,iBAAf,UACE,uBACEvC,KAAK,OACL4D,YAAY,qBACZrB,UAAU,qBACVd,KAAK,QACLkB,SAAUpB,EACVG,MAAOZ,EACP+C,aAAa,QAGf,0BACED,YAAY,uBACZrB,UAAU,kBACVd,KAAK,OACLkB,SAAUpB,EACVG,MAAO9C,EACPiF,aAAa,QAEf,qBAAKtB,UAAU,eAAf,SACGxC,EAAKQ,KAAO,qBAAKuD,IAAK/D,EAAKQ,IAAKwD,IAAI,eAIzC,wBAAQxB,UAAU,kBAAkBc,QA5CnB,WAEnBzC,IAAKC,KAAK,CACRC,MAAM,wBAAD,OAA0Bf,EAAKe,MAA/B,MACLkD,gBAAgB,EAChBC,kBAAmB,SACnBC,eAAgB,WACfC,MAAK,SAACC,GH4DgB,IAACzE,EG3DnByE,EAAOC,cACVzD,IAAKC,KAAK,UAAW,GAAI,QACzBV,EHwE6B,CACnCH,KAAMH,IGxEAM,GHwDsBR,EGxDCI,EAAKJ,GHyDlC,uCAAO,WAAOQ,EAAUG,GAAjB,eAAAhC,EAAA,6DACCa,EAAMmB,IAAWpC,KAAKiB,IADvB,SAGCpB,EAAG0C,IAAH,WAAWtB,EAAX,0BAAgCQ,IAAM2E,SAHvC,OAILnE,EAASY,EAAWpB,IAJf,2CAAP,+DGxBI,wBCzEO4E,EAAkB,WAC3B,OACI,sBAAKhC,UAAU,wBAAf,UACI,mBAAGA,UAAU,qCAAb,gDAGA,mBAAGA,UAAU,sECQZiC,EAAgB,iBAAO,CAClCxE,KAAMH,ICVK4E,EAA0B,SAACC,EAAOC,GAC7C,OAAO,SAACxE,GACNA,EDI+B,CACjCH,KAAMH,ICJJvC,IACGY,OACA0G,2BAA2BF,EAAOC,GAClCR,MAAK,YAAe,IAAZU,EAAW,EAAXA,KACP1E,EAASqE,KACTrE,EAAS2E,EAAMD,EAAK1F,IAAK0F,EAAKE,iBAE/BC,OAAM,SAACC,GACN9E,EAASqE,KACT5D,IAAKC,KAAK,QAASoE,EAAIC,QAAS,cAgC3BJ,EAAQ,SAAC3F,EAAK4F,GAAN,MAAuB,CAC1C/E,KAAMH,EACNI,QAAS,CACPd,MACA4F,iBAeSI,EAAS,WACpB,MAAO,CACLnF,KAAMH,ICtEGuF,EAAc,WAAyB,IAAxBhD,EAAuB,uDAAf,GAAIiD,EAAW,uCACjD,OAAQA,EAAOrF,MACb,KAAKH,EACH,MAAO,CACLV,IAAKkG,EAAOpF,QAAQd,IACpBsC,KAAM4D,EAAOpF,QAAQ8E,aAEzB,KAAKlF,EACH,MAAO,GACT,QACE,OAAOuC,ICRAkD,EAAe,SAAC,GAAoC,IAAlC3F,EAAiC,EAAjCA,GAAImB,EAA6B,EAA7BA,MAAOlC,EAAsB,EAAtBA,KAAM2G,EAAgB,EAAhBA,KAAMhF,EAAU,EAAVA,IAE9CwB,EAAWC,IAAOuD,GAGlBC,EAAc,CAClB1E,QACAlC,OACA2B,MACAgF,QAGIpF,EAAW8B,cAIjB,OACE,sBAAKM,UAAU,uDAAuDc,QAJ/C,WACvBlD,EAASL,EAAWH,EAAI6F,KAGxB,UACGjF,GACC,qBACEgC,UAAU,yBACVE,MAAO,CACLgD,eAAgB,QAChBC,gBAAgB,OAAD,OAASnF,EAAT,QAKrB,sBAAKgC,UAAU,sBAAf,UACE,mBAAGA,UAAU,uBAAb,SAAqCzB,IACrC,qBAAKyB,UAAU,yBAAf,SAAyC3D,OAE3C,sBAAK2D,UAAU,0BAAf,UACE,+BAAOR,EAASS,OAAO,UACvB,6BAAKT,EAASS,OAAO,eClChBmD,EAAiB,WAAO,IACpBC,EAAYzD,aAAY,SAACC,GAAD,OAAWA,EAAM7C,SAAhDA,MACR,OACE,qBAAKgD,UAAU,mBAAf,SACGqD,GACCA,EAAQC,KAAI,SAACC,GAAD,OAAW,cAAC,EAAD,eAAiCA,GAAdA,EAAMnG,UCH3CoG,GAAU,WACrB,IAAM5F,EAAW8B,YAAYmD,GACvBhD,EAAQD,aAAY,SAACC,GAAD,OAAWA,EAAMlE,QAU3C,OACE,wBAAOqE,UAAU,mBAAjB,UACE,sBAAKA,UAAU,0BAAf,UACE,qBAAIA,UAAU,OAAd,UACE,mBAAGA,UAAU,gBACb,sBAAMA,UAAU,uBAAhB,SAAwCH,EAAMX,UAGhD,wBAAQc,UAAU,MAAMc,QAjBT,WAEnBlD,EJiDF,uCAAO,WAAOA,GAAP,SAAA7B,EAAA,sEAEChB,IAASY,OAAO8H,UAFjB,OAIL7F,EAASgF,KACThF,ENoD6B,CAC/BH,KAAMH,IM1DC,2CAAP,wDIlCM,uBAKF,sBAAK0C,UAAU,qBAAqBc,QAjBjB,WACrBlD,EVNF,uCAAO,WAAOA,EAAUG,GAAjB,mBAAAhC,EAAA,6DACGa,EAAQmB,IAAWpC,KAAnBiB,IAEF8G,EAAU,CACdnF,MAAO,GACPlC,KAAM,GACN2G,MAAM,IAAI1D,MAAOC,WANd,SASgB/D,EAAGqB,WAAH,UAAiBD,EAAjB,mBAAsC+G,IAAID,GAT1D,OASCE,EATD,OAWLhG,EAASL,EAAWqG,EAAOxG,GAAIsG,IAC/B9F,EAASD,EAAkBf,IAZtB,2CAAP,0DUsBI,UACE,mBAAGoD,UAAU,sCACb,6CAGF,cAAC,EAAD,QC9BO6D,GAAgB,WAAO,IAC1BlE,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAM7C,SAAxC2C,OACR,OACE,sBAAKK,UAAU,wBAAf,UACE,cAAC,GAAD,IAEA,+BAAkB,OAAXL,EAAkB,cAAC,EAAD,IAAiB,cAAC,EAAD,U,oBCDnCmE,GAAc,WAEzB,IAAMC,EAAUC,cAGVpG,EAAW8B,cALc,EAaSjB,EAAQ,CAC9C0D,MAAO,wBACPC,SAAU,eAfmB,mBAaxBlB,EAbwB,KAaZlC,EAbY,KAmBvBiF,EAAYrE,aAAY,SAACC,GAAD,OAAWA,EAAMqE,MAAzCD,QACA9B,EAAoBjB,EAApBiB,MAAOC,EAAalB,EAAbkB,SAiBT+B,EAAc,WAClB,GAAKC,KAAUC,QAAQlC,GAEhB,QAAIC,EAASkC,OAAOC,OAAS,KAClClG,IAAKC,KACH,QACA,gEACA,UAEK,GAPPD,IAAKC,KAAK,QAAS,gCAAiC,UAaxD,OACE,qCACE,oBAAI0B,UAAU,cAAd,mBACA,uBAAMwE,SAjCU,SAACnE,GACnBA,EAAEoE,iBAGEN,MACFvG,EAASsE,EAAwBC,EAAOC,IACxC2B,EAAQW,QAAQ,OA2BhB,UAEE,uBACE1E,UAAU,cACVvC,KAAK,OACL4D,YAAY,QACZnC,KAAK,QACLoC,aAAa,MACbnC,MAAOgD,EACP/B,SAAUpB,IAEZ,uBACEgB,UAAU,cACVvC,KAAK,WACL4D,YAAY,WACZnC,KAAK,WACLC,MAAOiD,EACPhC,SAAUpB,IAEZ,wBACEvB,KAAK,SACLuC,UAAU,4BACV2E,SAAUV,EAHZ,mBAOA,sBAAKjE,UAAU,wBAAf,UACE,0DACA,sBAAKA,UAAU,aAAac,QAlDV,WACxBlD,GNJK,SAACA,GACN7C,IACGY,OACAiJ,gBAAgBlJ,GAChBkG,MAAK,gBAAGU,EAAH,EAAGA,KAAH,OAAc1E,EAAS2E,EAAMD,EAAK1F,IAAK0F,EAAKE,iBACjDC,OAAM,SAACoC,GAAD,OAAWC,QAAQC,IAAI,QAASF,UMgDnC,UACE,qBAAK7E,UAAU,sBAAf,SACE,qBACEA,UAAU,cACVuB,IAAI,8EACJC,IAAI,oBAGR,mBAAGxB,UAAU,WAAb,SACE,4DAKN,cAAC,IAAD,CAAMgF,GAAG,iBAAiBhF,UAAU,OAApC,yCCnGKiF,GAAiB,WAE5B,IAAMrH,EAAW8B,cAFiB,EAYKjB,EAAQ,CAC7CS,KAAM,GACNiD,MAAO,GACPC,SAAU,GACV8C,UAAW,KAhBqB,mBAY3BC,EAZ2B,KAYhBnG,EAZgB,KAmB1BE,EAAqCiG,EAArCjG,KAAMiD,EAA+BgD,EAA/BhD,MAAOC,EAAwB+C,EAAxB/C,SAAU8C,EAAcC,EAAdD,UAUzBf,EAAc,WAClB,OAA2B,IAAvBjF,EAAKoF,OAAOC,QACdlG,IAAKC,KAAK,QAAS,mBAAoB,UAChC,GACG8F,KAAUC,QAAQlC,KAEnBC,IAAa8C,GAAa9C,EAASmC,OAAS,KACrDlG,IAAKC,KACH,QACA,gEACA,UAEK,QAPPD,IAAKC,KAAK,QAAS,gCAAiC,UAYxD,OACE,qCACE,oBAAI0B,UAAU,cAAd,sBACA,uBAAMwE,SA3Ba,SAACnE,GACtBA,EAAEoE,iBACEN,KACFvG,EPTwC,SAACuE,EAAOC,EAAUlD,GAC9D,OAAO,SAACtB,GACN7C,IACGY,OACAyJ,+BAA+BjD,EAAOC,GACtCR,KAHH,uCAGQ,6BAAA7F,EAAA,6DAASuG,EAAT,EAASA,KAAT,SAEEA,EAAK+C,cAAc,CAAE7C,YAAatD,IAFpC,OAGJtB,EAAS2E,EAAMD,EAAK1F,IAAK0F,EAAKE,cAH1B,2CAHR,uDAQGC,OAAM,SAACC,GAAD,OAASrE,IAAKC,KAAK,QAASoE,EAAIC,QAAS,aODvC2C,CAA+BnD,EAAOC,EAAUlD,KAwBzD,UAEE,uBACEc,UAAU,cACVvC,KAAK,OACL4D,YAAY,OACZnC,KAAK,OACLkB,SAAUpB,EACVsC,aAAa,QAEf,uBACEtB,UAAU,cACVvC,KAAK,OACL4D,YAAY,QACZnC,KAAK,QACLkB,SAAUpB,EACVsC,aAAa,QAEf,uBACEtB,UAAU,cACVvC,KAAK,WACL2C,SAAUpB,EACVqC,YAAY,WACZnC,KAAK,aAEP,uBACEc,UAAU,cACVvC,KAAK,WACL4D,YAAY,mBACZnC,KAAK,YACLkB,SAAUpB,IAEZ,wBAAQvB,KAAK,SAASuC,UAAU,iCAAhC,sBAIA,cAAC,IAAD,CAAMgF,GAAG,cAAchF,UAAU,OAAjC,wCC1FKuF,GAAa,WACxB,OACE,qBAAKvF,UAAU,+DAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwF,KAAK,cAAcC,UAAW3B,KACrC,cAAC,IAAD,CAAO0B,KAAK,iBAAiBC,UAAWR,KACxC,cAAC,IAAD,CAAUD,GAAG,wBCTVU,GAAa,WACxB,OACE,qBAAK1F,UAAU,oBAAf,SACE,qBAAKA,UAAU,SAAf,SACE,sBAAK5C,GAAG,oBAAR,UACE,qBAAK4C,UAAU,cAAc5C,GAAG,iBAChC,qBAAK4C,UAAU,cAAc5C,GAAG,iBAChC,qBAAK4C,UAAU,cAAc5C,GAAG,iBAChC,qBAAK4C,UAAU,cAAc5C,GAAG,yB,SCN7BuI,GAAgB,SAAC,GAIvB,IAHMC,EAGP,EAHJH,UACAI,EAEI,EAFJA,gBACGC,EACC,gDACJ,OACE,cAAC,IAAD,2BACMA,GADN,IAEEL,UAAW,SAACM,GAAD,OACTF,EACE,cAACD,EAAD,eAAeG,IAEf,cAAC,IAAD,CAAUf,GAAG,qBCZVgB,GAAe,SAAC,GAItB,IAHMJ,EAGP,EAHJH,UACAI,EAEI,EAFJA,gBACGC,EACC,gDACJ,OACE,cAAC,IAAD,2BACMA,GADN,IAEEL,UAAW,SAACM,GAAD,OACRF,EAGC,cAAC,IAAD,CAAUb,GAAG,MAFb,cAACY,EAAD,eAAeG,SCDZE,GAAY,WACvB,IAAMrI,EAAW8B,cADY,EAIGf,oBAAS,GAJZ,mBAItBuH,EAJsB,KAIZC,EAJY,OAMOxH,oBAAS,GANhB,mBAMtByH,EANsB,KAMVC,EANU,KAgC7B,OAxBAjF,qBAAU,WAERrG,IAASY,OAAO2K,mBAAhB,uCAAmC,WAAOhE,GAAP,SAAAvG,EAAA,uDACjC,OAAIuG,QAAJ,IAAIA,OAAJ,EAAIA,EAAM1F,MAERgB,EAAS2E,EAAMD,EAAK1F,IAAK0F,EAAKE,cAG9B6D,GAAc,GAGdzI,EAASD,EAAkB2E,EAAK1F,MAGhCuJ,GAAY,KAGZA,GAAY,GAEZE,GAAc,IAjBiB,2CAAnC,yDAoBC,CAACzI,EAAUuI,EAAaC,IAEvBF,EACK,cAAC,GAAD,IAGP,cAAC,IAAD,UACE,qBAAKlG,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,cAAC,GAAD,CACEwF,KAAK,QACLC,UAAWF,GACXM,gBAAiBO,IAEnB,cAAC,GAAD,CACEZ,KAAK,IACLe,OAAK,EACLd,UAAW5B,GACXgC,gBAAiBO,Y,2BCzDvB1H,GAAe,CACnB1B,MAAO,GACP2C,OAAQ,MCJJjB,GAAe,CACnBuF,SAAS,EACTuC,SAAU,MCGNC,GAAWC,aAAgB,CAC/B/K,KAAMkH,EACNqB,GDFuB,WAAmC,IAAlCrE,EAAiC,uDAAzBnB,GAAcoE,EAAW,uCACzD,OAAQA,EAAOrF,MACb,KAAKH,EACH,OAAO,2BACFuC,GADL,IAEE2G,SAAU1D,EAAOpF,UAErB,KAAKJ,EACH,OAAO,2BACFuC,GADL,IAEE2G,SAAU,OAGd,KAAKlJ,EACH,OAAO,2BACFuC,GADL,IAEEoE,SAAS,IAEb,KAAK3G,EACH,OAAO,2BACFuC,GADL,IAEEoE,SAAS,IAEb,QACE,OAAOpE,ICrBX7C,MFD0B,WAAmC,IAAlC6C,EAAiC,uDAAzBnB,GAAcoE,EAAW,uCAC5D,OAAQA,EAAOrF,MACb,KAAKH,EACH,OAAO,2BACFuC,GADL,IAEEF,OAAO,eACFmD,EAAOpF,WAGhB,KAAKJ,EACH,OAAO,2BACFuC,GADL,IAEE7C,MAAM,aAAK8F,EAAOpF,WAEtB,KAAKJ,EACH,OAAO,2BACFuC,GADL,IAEE7C,MAAO6C,EAAM7C,MAAMsG,KAAI,SAAC9F,GAAD,OACrBA,EAAKJ,KAAO0F,EAAOpF,QAAQN,GAAK0F,EAAOpF,QAAQF,KAAOA,OAG5D,KAAKF,EACH,OAAO,2BACFuC,GADL,IAEE7C,MAAO6C,EAAM7C,MAAM2J,QAAO,SAACnJ,GAAD,OAAUA,EAAKJ,KAAO0F,EAAOpF,aAE3D,KAAKJ,EACH,OAAO,2BACFuC,GADL,IAEEF,OAAQ,OAEZ,KAAKrC,EACH,OAAO,eAAKoB,IACd,QACE,OAAOmB,ME9BP+G,GACe,qBAAXC,QACNA,OAAOC,sCACTC,KAGWC,GAAQC,aACnBR,GACAG,GACEM,aAAgBC,QChBPC,GAAa,WAExB,OACE,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAAC,GAAD,O,OCNNK,IAASC,OAAO,cAAC,GAAD,IAAgBC,SAASC,eAAe,W","file":"static/js/main.91bdc80e.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCAe2ZJVMt976GXCyUsUqGNHKW5cQ0e7p0\",\r\n  authDomain: \"journal-react-15789.firebaseapp.com\",\r\n  projectId: \"journal-react-15789\",\r\n  storageBucket: \"journal-react-15789.appspot.com\",\r\n  messagingSenderId: \"1048165902996\",\r\n  appId: \"1:1048165902996:web:67732a4981a48366df2281\",\r\n  measurementId: \"G-DGYZNP71R1\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\n//login with google\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { db, googleAuthProvider, firebase };\r\n","export const fileUpload = async (file) => {\r\n  const cloudUrl = \"https://api.cloudinary.com/v1_1/dus5lm40j/upload\";\r\n\r\n  const formData = new FormData();\r\n\r\n  formData.append(\"upload_preset\", \"react-journal\");\r\n  formData.append(\"file\", file);\r\n\r\n  try {\r\n    const resp = await fetch(cloudUrl, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    if (resp.ok) {\r\n      const cloudResp = await resp.json();\r\n      return cloudResp.secure_url;\r\n    } else {\r\n      throw await resp.json();\r\n    }\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n","import { db } from \"../firebase/firebaseConfig\";\r\n\r\nexport const loadNotes = async (uid) => {\r\n  const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n\r\n  const notes = [];\r\n\r\n  //add to array notes data\r\n  notesSnap.forEach((snapChildren) => {\r\n    notes.push({\r\n      id: snapChildren.id,\r\n      ...snapChildren.data(),\r\n    });\r\n  });\r\n  return notes;\r\n};\r\n","export const types = {\r\n  login: \"[Auth] login\",\r\n  logout: \"[Auth] logout\",\r\n\r\n  //errors\r\n  uiSetError: \"[UI] Set Error\",\r\n  uiRemoveError: \"[UI] Remove Error\",\r\n\r\n  //loading\r\n  uiStartLoading: \"[UI] Start loading\",\r\n  uiFinishLoading: \"[UI] Finish loading\",\r\n\r\n  //notes\r\n  notesAddNew: \"[Notes] New note\",\r\n  notesActive: \"[Notes] Set Active note\",\r\n  notesLoad: \"[Notes] Load Notes\",\r\n  notesUpdated: \"[Notes] Update Notes\",\r\n  notesFileUrl: \"[Notes] Update Image Url\",\r\n  notesDelete: \"[Notes] Delete Note\",\r\n  notesLogoutCleaning: \"[Notes] Logout Cleaning\",\r\n  notesActionCleaning: \"[Notes] Action Cleaning\",\r\n};\r\n","import Swal from \"sweetalert2\";\r\n\r\nimport { db } from \"../firebase/firebaseConfig\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startNewNote = () => {\r\n  //async homework\r\n  return async (dispatch, getState) => {\r\n    const { uid } = getState().auth;\r\n\r\n    const newNote = {\r\n      title: \"\",\r\n      body: \"\",\r\n      date: new Date().getTime(),\r\n    };\r\n\r\n    const docRef = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n\r\n    dispatch(activeNote(docRef.id, newNote));\r\n    dispatch(startLoadingNotes(uid));\r\n  };\r\n};\r\n\r\nexport const activeNote = (id, note) => ({\r\n  type: types.notesActive,\r\n  payload: {\r\n    id,\r\n    ...note,\r\n  },\r\n});\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n  return async (dispatch) => {\r\n    const notes = await loadNotes(uid);\r\n    dispatch(setNotes(notes));\r\n  };\r\n};\r\n\r\nexport const setNotes = (notes) => ({\r\n  type: types.notesLoad,\r\n  payload: notes,\r\n});\r\n\r\n//save note in FireStore\r\nexport const startSaveNotes = (note) => {\r\n  return async (dispatch, getState) => {\r\n    //user uid\r\n    const { uid } = getState().auth;\r\n\r\n    if (!note.url) {\r\n      delete note.url;\r\n    }\r\n    const noteToFirestore = { ...note };\r\n    delete noteToFirestore.id;\r\n\r\n    await db.doc(`/${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n\r\n    dispatch(refreshNote(note.id, noteToFirestore));\r\n    Swal.fire(\"Saved!\", note.title, \"success\");\r\n  };\r\n};\r\n\r\n//refresh one note\r\nexport const refreshNote = (id, note) => ({\r\n  type: types.notesUpdated,\r\n  payload: {\r\n    id,\r\n    note: {\r\n      id,\r\n      ...note, //no delete key\r\n    },\r\n  },\r\n});\r\n\r\n//upload file\r\n\r\nexport const startUploading = (file) => {\r\n  return async (dispatch, getState) => {\r\n    const { active: activeNote } = getState().notes;\r\n\r\n    Swal.fire({\r\n      title: \"Uploading...\",\r\n      text: \"Please Wait\",\r\n      willOpen: () => {\r\n        Swal.showLoading();\r\n      },\r\n    });\r\n    const fileUrl = await fileUpload(file);\r\n    activeNote.url = fileUrl;\r\n    dispatch(startSaveNotes(activeNote));\r\n\r\n    Swal.close();\r\n  };\r\n};\r\n\r\n//delete from firestore\r\nexport const startDeleting = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const uid = getState().auth.uid;\r\n\r\n    await db.doc(`/${uid}/journal/notes/${id}`).delete();\r\n    dispatch(deleteNote(id));\r\n  };\r\n};\r\n\r\n//delete note\r\nexport const deleteNote = (id) => ({\r\n  type: types.notesDelete,\r\n  payload: id,\r\n});\r\n\r\nexport const actionCleaning = () => ({\r\n  type: types.notesActionCleaning,\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n  type: types.notesLogoutCleaning,\r\n});\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = (newFormState = initialState) => {\r\n    setValues(newFormState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startSaveNotes, startUploading } from \"../../actions/notes\";\r\nimport moment from \"moment\";\r\n\r\nexport const NotesAppBar = () => {\r\n  //time\r\n  const currentTime = new Date().getTime();\r\n  const noteDate = moment(currentTime);\r\n\r\n  const dispatch = useDispatch();\r\n  //notes state\r\n  const { active } = useSelector((state) => state.notes);\r\n\r\n  //save note\r\n  const handleSave = () => {\r\n    dispatch(startSaveNotes(active));\r\n  };\r\n\r\n  const inputUploadImage = useRef();\r\n  const handlePictureUpload = () => {\r\n    inputUploadImage.current.click();\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      dispatch(startUploading(file));\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"notes__appbar\">\r\n      <span>{noteDate.format(\"dddd, MMMM Do\")}</span>\r\n\r\n      <input\r\n        type=\"file\"\r\n        style={{ display: \"none\" }}\r\n        onChange={handleFileChange}\r\n        ref={inputUploadImage}\r\n      />\r\n      <div>\r\n        <button className=\"btn\" onClick={handlePictureUpload}>\r\n          Picture\r\n        </button>\r\n        <button className=\"btn\" onClick={handleSave}>\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCleaning, activeNote, startDeleting } from \"../../actions/notes\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { NotesAppBar } from \"./NotesAppBar\";\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const NoteScreen = () => {\r\n  const { active: note } = useSelector((state) => state.notes);\r\n  const [formValues, handleInputChange, reset] = useForm(note);\r\n\r\n  const dispatch = useDispatch();\r\n  //active note\r\n  const activeId = useRef(note.id);\r\n  useEffect(() => {\r\n    //show changes when one note selected\r\n    if (note?.id !== activeId.current) {\r\n      reset(note, reset);\r\n      activeId.current = note.id;\r\n    }\r\n  }, [note, reset]);\r\n\r\n  useEffect(() => {\r\n    //refresh active note\r\n    dispatch(activeNote(formValues.id, { ...formValues }));\r\n  }, [formValues, dispatch]);\r\n\r\n  const { body, title } = formValues;\r\n\r\n  //delete\r\n  const handleDelete = () => {\r\n    //delete note\r\n    Swal.fire({\r\n      title: `Are you sure remove \"${note.title}\"?`,\r\n      showDenyButton: true,\r\n      confirmButtonText: \"Cancel\",\r\n      denyButtonText: \"Remove\",\r\n    }).then((result) => {\r\n      if (!result.isConfirmed) {\r\n        Swal.fire(\"Removed\", \"\", \"info\");\r\n        dispatch(actionCleaning());\r\n        dispatch(startDeleting(note.id));\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"notes__main-content\">\r\n      <NotesAppBar />\r\n\r\n      <div className=\"notes__content\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Some awesome title\"\r\n          className=\"notes__title-input\"\r\n          name=\"title\"\r\n          onChange={handleInputChange}\r\n          value={title}\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <textarea\r\n          placeholder=\"What Happened today?\"\r\n          className=\"notes__textarea\"\r\n          name=\"body\"\r\n          onChange={handleInputChange}\r\n          value={body}\r\n          autoComplete=\"off\"\r\n        ></textarea>\r\n        <div className=\"notes__image\">\r\n          {note.url && <img src={note.url} alt=\"Stars\" />}\r\n        </div>\r\n      </div>\r\n\r\n      <button className=\"btn btn-warning\" onClick={handleDelete}>\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p className=\"animate__animated animate__flipInX\">\r\n                Select Something. Create an entry!\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5 animate__animated animate__backInRight\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n//using implicit return () => ({})\r\nexport const setError = (err) => ({\r\n  type: types.uiSetError,\r\n  payload: err,\r\n});\r\n\r\nexport const removeError = (err) => ({\r\n  type: types.uiRemoveError,\r\n  payload: err,\r\n});\r\n\r\nexport const startLoading = () => ({\r\n  type: types.uiStartLoading,\r\n});\r\nexport const finishLoading = () => ({\r\n  type: types.uiFinishLoading,\r\n});\r\n","import { types } from \"../types/types\";\r\nimport { firebase, googleAuthProvider } from \"../firebase/firebaseConfig\";\r\nimport { finishLoading, startLoading } from \"./ui\";\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport { noteLogout } from \"./notes\";\r\n//login email and password\r\nexport const startLoginEmailPassword = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(startLoading());\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(({ user }) => {\r\n        dispatch(finishLoading());\r\n        dispatch(login(user.uid, user.displayName));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(finishLoading());\r\n        Swal.fire(\"Error\", err.message, \"error\");\r\n      });\r\n  };\r\n};\r\n\r\n//register email and password\r\nexport const startRegisterWithEmailPassword = (email, password, name) => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(async ({ user }) => {\r\n        //define displayName\r\n        await user.updateProfile({ displayName: name });\r\n        dispatch(login(user.uid, user.displayName));\r\n      })\r\n      .catch((err) => Swal.fire(\"Error\", err.message, \"error\"));\r\n  };\r\n};\r\n\r\n//login with Google\r\nexport const startGoogleLogin = () => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(googleAuthProvider)\r\n      .then(({ user }) => dispatch(login(user.uid, user.displayName)))\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n};\r\n\r\n//return login action\r\nexport const login = (uid, displayName) => ({\r\n  type: types.login,\r\n  payload: {\r\n    uid,\r\n    displayName,\r\n  },\r\n});\r\n\r\nexport const startLogout = () => {\r\n  return async (dispatch) => {\r\n    //firebase logout\r\n    await firebase.auth().signOut();\r\n\r\n    dispatch(logout());\r\n    dispatch(noteLogout());\r\n  };\r\n};\r\n\r\n//local logout\r\nexport const logout = () => {\r\n  return {\r\n    type: types.logout,\r\n  };\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.login:\r\n      return {\r\n        uid: action.payload.uid,\r\n        name: action.payload.displayName,\r\n      };\r\n    case types.logout:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { activeNote } from \"../../actions/notes\";\r\nexport const JournalEntry = ({ id, title, body, date, url }) => {\r\n  //date\r\n  const noteDate = moment(date);\r\n\r\n  //current object\r\n  const activeEntry = {\r\n    title,\r\n    body,\r\n    url,\r\n    date,\r\n  };\r\n  //modify status note (active note)\r\n  const dispatch = useDispatch();\r\n  const handleEntryClick = () => {\r\n    dispatch(activeNote(id, activeEntry));\r\n  };\r\n  return (\r\n    <div className=\"animate__animated animate__pulse journal__entry mt-1\" onClick={handleEntryClick}>\r\n      {url && (\r\n        <div\r\n          className=\"journal__entry-picture\"\r\n          style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url(${url})`,\r\n          }}\r\n        ></div>\r\n      )}\r\n\r\n      <div className=\"journal__entry-body\">\r\n        <p className=\"journal__entry-title\">{title}</p>\r\n        <div className=\"journal__entry-content\">{body}</div>\r\n      </div>\r\n      <div className=\"journal__entry-date-box\">\r\n        <span>{noteDate.format(\"dddd\")}</span>\r\n        <h4>{noteDate.format(\"Do\")}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { JournalEntry } from \"./JournalEntry\";\r\n\r\nexport const JournalEntries = () => {\r\n  const { notes: entries } = useSelector((state) => state.notes);\r\n  return (\r\n    <div className=\"journal__entries\">\r\n      {entries &&\r\n        entries.map((entry) => <JournalEntry key={entry.id} {...entry} />)}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLogout } from \"../../actions/auth\";\r\nimport { startNewNote } from \"../../actions/notes\";\r\nimport { authReducer } from \"../../reducers/authReducer\";\r\nimport { JournalEntries } from \"./JournalEntries\";\r\nexport const Sidebar = () => {\r\n  const dispatch = useDispatch(authReducer);\r\n  const state = useSelector((state) => state.auth);\r\n  const handleLogout = () => {\r\n    //logout\r\n    dispatch(startLogout());\r\n  };\r\n\r\n  const handleAddEntry = () => {\r\n    dispatch(startNewNote());\r\n  };\r\n\r\n  return (\r\n    <aside className=\"journal__sidebar\">\r\n      <div className=\"journal__sidebar-navbar\">\r\n        <h3 className=\"mt-5\">\r\n          <i className=\"far fa-moon\"></i>\r\n          <span className=\"journal__displayname\">{state.name}</span>\r\n        </h3>\r\n\r\n        <button className=\"btn\" onClick={handleLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"journal__new-entry\" onClick={handleAddEntry}>\r\n        <i className=\"fa fa-calendar-plus fa-5x pointer\"></i>\r\n        <p>New Entry</p>\r\n      </div>\r\n\r\n      <JournalEntries />\r\n    </aside>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NoteScreen } from \"../notes/NoteScreen\";\r\nimport { NothingSelected } from \"./NothingSelected\";\r\nimport { Sidebar } from \"./Sidebar\";\r\n\r\nexport const JournalScreen = () => {\r\n  const { active } = useSelector((state) => state.notes);\r\n  return (\r\n    <div className=\"journal__main-content\">\r\n      <Sidebar />\r\n\r\n      <main>{active !== null ? <NoteScreen /> : <NothingSelected />}</main>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { startGoogleLogin, startLoginEmailPassword } from \"../../actions/auth\";\r\n\r\nimport validator from \"validator\";\r\n//import { removeError, setError } from \"../../actions/ui\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nexport const LoginScreen = () => {\r\n  //history for redirect\r\n  const history = useHistory();\r\n\r\n  //dispatch for value. React-redux hook\r\n  const dispatch = useDispatch();\r\n\r\n  /*   //delete other errors\r\n  useEffect(() => {\r\n    dispatch(removeError(\"No email\"));\r\n  }, [dispatch]); */\r\n\r\n  //hook useForn\r\n  const [formValues, handleInputChange] = useForm({\r\n    email: \"santiago123@gmail.com\",\r\n    password: \"3218825708\",\r\n  });\r\n\r\n  //content ui state //msgError\r\n  const { loading } = useSelector((state) => state.ui);\r\n  const { email, password } = formValues;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    //send action\r\n    if (isFormValid()) {\r\n      dispatch(startLoginEmailPassword(email, password));\r\n      history.replace(\"/\");\r\n    }\r\n  };\r\n\r\n  //login with Google\r\n  const handleGoogleLogin = () => {\r\n    dispatch(startGoogleLogin());\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    if (!validator.isEmail(email)) {\r\n      Swal.fire(\"Error\", \"Is not email. Try valid email\", \"error\");\r\n    } else if (password.trim().length < 5) {\r\n      Swal.fire(\r\n        \"Error\",\r\n        \"Password should be at least 6 characters and match each other\",\r\n        \"error\"\r\n      );\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"auth__title\">Login</h3>\r\n      <form onSubmit={handleLogin}>\r\n        {/*  {msgError && <div className=\"auth__alert-error\">{msgError}</div>} */}\r\n        <input\r\n          className=\"auth__input\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          autoComplete=\"off\"\r\n          value={email}\r\n          onChange={handleInputChange}\r\n        />\r\n        <input\r\n          className=\"auth__input\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary btn-block\"\r\n          disabled={loading}\r\n        >\r\n          Login\r\n        </button>\r\n        <div className=\"auth__social-networks\">\r\n          <p>Login with Social Network</p>\r\n          <div className=\"google-btn\" onClick={handleGoogleLogin}>\r\n            <div className=\"google-icon-wrapper\">\r\n              <img\r\n                className=\"google-icon\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                alt=\"google button\"\r\n              />\r\n            </div>\r\n            <p className=\"btn-text\">\r\n              <b>Sign in with google</b>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <Link to=\"/auth/register\" className=\"link\">\r\n          Create a new account\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport validator from \"validator\";\r\nimport { useDispatch } from \"react-redux\";\r\n//import { removeError, setError } from \"../../actions/ui\";\r\nimport { startRegisterWithEmailPassword } from \"../../actions/auth\";\r\n\r\nexport const RegisterScreen = () => {\r\n  //errors\r\n  const dispatch = useDispatch();\r\n\r\n  /*   //delete other errors\r\n  useEffect(() => {\r\n    dispatch(removeError(\"No email\"));\r\n  }, [dispatch]); */\r\n\r\n  //content ui state\r\n  //const { msgError } = useSelector((state) => state.ui);\r\n\r\n  const [formValue, handleInputChange] = useForm({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const { name, email, password, password2 } = formValue;\r\n\r\n  //register onsubmit\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    if (isFormValid()) {\r\n      dispatch(startRegisterWithEmailPassword(email, password, name));\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    if (name.trim().length === 0) {\r\n      Swal.fire(\"Error\", \"Name is required\", \"error\");\r\n      return false;\r\n    } else if (!validator.isEmail(email)) {\r\n      Swal.fire(\"Error\", \"Is not email. Try valid email\", \"error\");\r\n    } else if (password !== password2 || password.length < 5) {\r\n      Swal.fire(\r\n        \"Error\",\r\n        \"Password should be at least 6 characters and match each other\",\r\n        \"error\"\r\n      );\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <h3 className=\"auth__title\">Register</h3>\r\n      <form onSubmit={handleRegister}>\r\n        {/*         {msgError && <div className=\"auth__alert-error\">{msgError}</div>} */}\r\n        <input\r\n          className=\"auth__input\"\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          name=\"name\"\r\n          onChange={handleInputChange}\r\n          autoComplete=\"off\"\r\n        />\r\n        <input\r\n          className=\"auth__input\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          onChange={handleInputChange}\r\n          autoComplete=\"off\"\r\n        />\r\n        <input\r\n          className=\"auth__input\"\r\n          type=\"password\"\r\n          onChange={handleInputChange}\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n        />\r\n        <input\r\n          className=\"auth__input\"\r\n          type=\"password\"\r\n          placeholder=\"Confirm password\"\r\n          name=\"password2\"\r\n          onChange={handleInputChange}\r\n        />\r\n        <button type=\"submit\" className=\"btn btn-primary btn-block mb-5\">\r\n          Register\r\n        </button>\r\n\r\n        <Link to=\"/auth/login\" className=\"link\">\r\n          Already Registered?\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { RegisterScreen } from \"../components/auth/RegisterScreen\";\r\nexport const AuthRouter = () => {\r\n  return (\r\n    <div className=\"animate__animated animate__fadeIn animate__faster auth__main\">\r\n      <div className=\"auth__box-container\">\r\n        <Switch>\r\n          <Route path=\"/auth/login\" component={LoginScreen} />\r\n          <Route path=\"/auth/register\" component={RegisterScreen} />\r\n          <Redirect to=\"/auth/login\" />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const NoteLoader = () => {\r\n  return (\r\n    <div className=\"loader__container\">\r\n      <div className=\"loader\">\r\n        <div id=\"loader__Indicator\">\r\n          <div className=\"loader__Bar\" id=\"loader__Bar1\"></div>\r\n          <div className=\"loader__Bar\" id=\"loader__Bar2\"></div>\r\n          <div className=\"loader__Bar\" id=\"loader__Bar3\"></div>\r\n          <div className=\"loader__Bar\" id=\"loader__Bar4\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Redirect, Route } from \"react-router\";\r\n\r\nexport const PrivateRoutes = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/auth/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoutes.propTypes = {\r\n  component: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Redirect, Route } from \"react-router\";\r\n\r\nexport const PublicRoutes = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        !isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoutes.propTypes = {\r\n  component: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport { JournalScreen } from \"../components/journal/JournalScreen\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\n\r\nimport { firebase } from \"../firebase/firebaseConfig\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport { NoteLoader } from \"../components/notes/NoteLoader\";\r\nimport { PrivateRoutes } from \"./PrivateRoutes\";\r\nimport { PublicRoutes } from \"./PublicRoutes\";\r\nimport { startLoadingNotes } from \"../actions/notes\";\r\n\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  //show loader\r\n  const [checking, setChecking] = useState(true);\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(true); //true for no errors\r\n\r\n  useEffect(() => {\r\n    //current user\r\n    firebase.auth().onAuthStateChanged(async (user) => {\r\n      if (user?.uid) {\r\n        //dipatch user information\r\n        dispatch(login(user.uid, user.displayName));\r\n\r\n        //authenticated\r\n        setIsLoggedIn(true);\r\n\r\n        //notes data\r\n        dispatch(startLoadingNotes(user.uid));\r\n\r\n        //hidden loader\r\n        setChecking(false);\r\n      } else {\r\n        //hidden loader\r\n        setChecking(false);\r\n        //no auth\r\n        setIsLoggedIn(false);\r\n      }\r\n    });\r\n  }, [dispatch, setChecking, isLoggedIn]);\r\n\r\n  if (checking) {\r\n    return <NoteLoader />;\r\n  }\r\n  return (\r\n    <Router>\r\n      <div className=\"app__container\">\r\n        <Switch>\r\n          <PublicRoutes\r\n            path=\"/auth\"\r\n            component={AuthRouter}\r\n            isAuthenticated={isLoggedIn}\r\n          />\r\n          <PrivateRoutes\r\n            path=\"/\"\r\n            exact\r\n            component={JournalScreen}\r\n            isAuthenticated={isLoggedIn}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","//active{ id, title, body, imageUrl}\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  notes: [],\r\n  active: null,\r\n};\r\n\r\nexport const NotesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.notesActive:\r\n      return {\r\n        ...state,\r\n        active: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case types.notesLoad:\r\n      return {\r\n        ...state,\r\n        notes: [...action.payload],\r\n      };\r\n    case types.notesUpdated:\r\n      return {\r\n        ...state,\r\n        notes: state.notes.map((note) =>\r\n          note.id === action.payload.id ? action.payload.note : note\r\n        ),\r\n      };\r\n    case types.notesDelete:\r\n      return {\r\n        ...state,\r\n        notes: state.notes.filter((note) => note.id !== action.payload),\r\n      };\r\n    case types.notesActionCleaning:\r\n      return {\r\n        ...state,\r\n        active: null,\r\n      };\r\n    case types.notesLogoutCleaning:\r\n      return { ...initialState };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  msgError: null,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiSetError:\r\n      return {\r\n        ...state,\r\n        msgError: action.payload,\r\n      };\r\n    case types.uiRemoveError:\r\n      return {\r\n        ...state,\r\n        msgError: null,\r\n      };\r\n    //true o false loading\r\n    case types.uiStartLoading:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case types.uiFinishLoading:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { NotesReducer } from \"../reducers/NotesReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\n\r\n//have more reducers\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n  ui: uiReducer,\r\n  notes: NotesReducer,\r\n});\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\n//create store, Can only receive one reducer\r\nexport const store = createStore(\r\n  reducers,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk) //async actions\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\nimport { store } from \"./store/store\";\r\n\r\nexport const JournalApp = () => {\r\n  //provider for store\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { JournalApp } from \"./JournalApp\";\nimport './styles/styles.scss';\nReactDOM.render(<JournalApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}